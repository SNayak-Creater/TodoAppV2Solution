@page
@using TodoAppV2.Models
@model TodoAppV2.Pages.EditModel

@{
    ViewData["Title"] = "Edit Todo";
}

<h1>Edit Task</h1>

<hr />
<div class="row">
    <div class="col-md-6">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <input type="hidden" asp-for="TodoItem.Id" />

            <div class="form-group mb-3">
                <label asp-for="TodoItem.Title" class="control-label"></label>
                <input asp-for="TodoItem.Title" class="form-control" />
                <span asp-validation-for="TodoItem.Title" class="text-danger"></span>
            </div>

            <div class="form-group mb-3">
                <label asp-for="TodoItem.Priority" class="control-label"></label>
                <input asp-for="TodoItem.Priority" class="form-control" />
                <span asp-validation-for="TodoItem.Priority" class="text-danger"></span>
            </div>

            <div class="form-group mb-4">
                <label asp-for="TodoItem.Status" class="control-label"></label>
                <select asp-for="TodoItem.Status" class="form-control"
                        asp-items="Html.GetEnumSelectList<TodoStatus>()"></select>
                <span asp-validation-for="TodoItem.Status" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Update" class="btn btn-primary" />
                <a asp-page="./Index" class="btn btn-secondary">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        // Enables client-side validation
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}